/*C.design and create a component that will show images laid out according to the requirement*/
import React,{Component}from 'react';
import {
  StyleSheet,
  View,
  Image,
  Dimensions,
}from 'react-native';
const images =[ //sets of pictures
  require('./Dog.jpeg'),
  require('./Girl.jpg'),
  require('./Rabbit.jpg'),
]
const ImageElement1 = ({index}) =>( //picture that occupies a row
  <Image
      style={styles.image1}
      source={images[index]}
  />
)
const ImageElement2 = ({index}) =>( //picture that occupies 1/2 row
  <Image
      style={styles.image2}
      source={images[index]}
  />
)
const ImageElement3 = ({index}) =>( //picture that occupies 1/3 row
  <Image
      style={styles.image3}
      source={images[index]}
  />
)
//randomly attribute images
const App = () =>(
  <View style={styles.layoutColumn}>

    <View style={styles.container}>
        <ImageElement1 index={0}/>
    </View>    

     <View style={styles.container}>
        <ImageElement2 index={2}/>
        <ImageElement2 index={1}/>
    </View>

    <View style={styles.container}>
        <ImageElement3 index={1}/>
        <ImageElement3 index={0}/>
        <ImageElement3 index={2}/>
    </View>

    <View style={styles.container}>
        <ImageElement3 index={0}/>
        <ImageElement3 index={1}/>
        <ImageElement3 index={2}/>
    </View>

     <View style={styles.container}>
        <ImageElement2 index={1}/>
        <ImageElement2 index={1}/>
    </View>

    <View style={styles.container}>
        <ImageElement1 index={2}/>
    </View>   

  </View>
)

const styles = StyleSheet.create({
  layoutColumn:{  //output each row by colomn (total column is six)
    flex:1,
    flexDirection:'column'
  },
  container:{   //
    justifyContent:'center',//align in the X direction
    flexWrap:'wrap',
    alignItems:'center',//align in the Y direction
    flexDirection:'row'//the pictures in one row are arranged by row
  }, 
  image1:{//picture that occupies one row
    width:Dimensions.get('window').width- 2,//let the width of whole screen minus (left plus right) margin
    height:Dimensions.get('window').height / 6 - 5,//let the height of whole screen minus total margin of six rows
    margin:1,
    padding:1,
    backgroundColor:'white'
  },
  image2:{//picture that occupies 1/2 row
    width:Dimensions.get('window').width / 2 - 2,//one row includes two pictures
    height:Dimensions.get('window').height / 6 -5,
    margin:1,
    padding:1,
    backgroundColor:'white'
  },
  image3:{//picture that occupies 1/3 row
    width:Dimensions.get('window').width / 3 - 2,//one row include three pictures
    height:Dimensions.get('window').height / 6 -5,
    margin:1,
    padding:1,
    backgroundColor:'white'
  }

})

export default App;
